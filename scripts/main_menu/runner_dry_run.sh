#!/usr/bin/env bash
TMP_DIR="$(mktemp -d 2>/dev/null || mktemp -d -t blux)"
IFS=$'\n\t'
cleanup(){ rm -rf "$TMP_DIR"; }
trap cleanup EXIT
set -euo pipefail
echo "[BLUX Lite] Runner Dry Run (non-destructive)"
ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
cd "$ROOT"

echo "1) Checking bootstrap presence..."
test -f "first_start.sh" && echo "   - first_start.sh: OK" || { echo "   - first_start.sh: MISSING"; exit 1; }

echo "2) Verifying auto-start.sh is not pre-bundled..."
if [[ -f "auto-start.sh" ]]; then
  echo "   - auto-start.sh exists (should be generated by first_start.sh)."; exit 2;
else
  echo "   - auto-start.sh: not present (OK)"
fi

echo "3) Checking menu runner..."
test -f "blux-lite.sh" && echo "   - blux-lite.sh: OK" || { echo "   - blux-lite.sh: MISSING"; exit 3; }

echo "4) Documentation sanity..."
grep -qi "first_start.sh" "README.md" && echo "   - README mentions first_start.sh: OK" || { echo "   - README missing startup docs"; exit 4; }

echo "5) Version check..."
python - <<'PY'
try:
    from blux import __version__
    print(f"   - blux.__version__ = {__version__}")
except Exception as e:
    print("   - Could not import blux.__version__:", e)
PY

echo "Dry run complete. No actions executed."